generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  idUsuario     Int            @id @default(autoincrement()) @map("id_usuario")
  email         String         @unique
  senha         String
  administrador Administrador?
  cliente       Cliente?

  @@index([email])
  @@map("usuario")
}

model Administrador {
  idAdministrador Int              @id @default(autoincrement()) @map("id_administrador")
  idUsuario       Int              @unique @map("id_usuario")
  usuario         Usuario          @relation(fields: [idUsuario], references: [idUsuario])
  nome            String
  situacao        Int
  respostasTicket TicketResposta[]

  @@map("administrador")
}

model Cliente {
  idCliente       Int              @id @default(autoincrement()) @map("id_cliente")
  idUsuario       Int              @unique @map("id_usuario")
  usuario         Usuario          @relation(fields: [idUsuario], references: [idUsuario])
  nome            String
  situacao        Int
  tipo            Int
  cnpjCpf         String           @map("cnpj_cpf")
  tickets         Ticket[]
  respostasTicket TicketResposta[]
  assinaturas     Assinatura[]
  contas          Conta[]

  @@map("cliente")
}

model Ticket {
  idTicket    Int              @id @default(autoincrement()) @map("id_ticket")
  idCliente   Int              @map("id_cliente")
  cliente     Cliente          @relation(fields: [idCliente], references: [idCliente])
  assunto     String
  situacao    Int
  descricao   String
  dataCriacao DateTime         @default(now()) @map("data_criacao")
  respostas   TicketResposta[]

  @@map("ticket")
}

model TicketResposta {
  idTicket        Int            @map("id_ticket")
  idResposta      Int            @default(autoincrement()) @map("id_resposta")
  ticket          Ticket         @relation(fields: [idTicket], references: [idTicket])
  idAdministrador Int?           @map("id_administrador")
  administrador   Administrador? @relation(fields: [idAdministrador], references: [idAdministrador])
  idCliente       Int?           @map("id_cliente")
  cliente         Cliente?       @relation(fields: [idCliente], references: [idCliente])
  mensagem        String
  dataCriacao     DateTime       @default(now()) @map("data_criacao")

  @@id([idTicket, idResposta])
  @@map("ticket_resposta")
}

model Assinatura {
  idAssinatura          Int      @id @default(autoincrement()) @map("id_assinatura")
  idCliente             Int      @map("id_cliente")
  cliente               Cliente  @relation(fields: [idCliente], references: [idCliente])
  contas                Conta[]
  situacao              Int
  descricao             String
  dataVencimento        DateTime @map("data_vencimento")
  dataProximoVencimento DateTime @map("data_proximo_vencimento")
  valor                 Decimal

  @@map("assinatura")
}

model Conta {
  idConta        Int      @id @default(autoincrement()) @map("id_conta")
  idCliente      Int      @map("id_cliente")
  cliente        Cliente  @relation(fields: [idCliente], references: [idCliente])
  idAssinatura   Int @map("id_assinatura")
  assinatura     Assinatura @relation(fields: [idAssinatura], references: [idAssinatura])
  situacao       Int
  dataVencimento DateTime @map("data_vencimento")
  dataPagamento  DateTime? @map("data_pagamento")
  valor          Decimal

  @@map("conta")
}